apiVersion: v1
kind: Namespace
metadata:
  name: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubevip
  namespace: kube-system
data:
  range-global: "false"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-vip
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-vip
rules:
- apiGroups: [""]
  resources: ["services","endpoints","nodes"]
  verbs: ["get","list","watch","update","patch"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get","list","watch","create","update","patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-vip
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-vip
subjects:
- kind: ServiceAccount
  name: kube-vip
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-vip-ds
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: kube-vip-ds
  template:
    metadata:
      labels:
        name: kube-vip-ds
    spec:
      serviceAccountName: kube-vip
      hostNetwork: true
      nodeSelector:
        node-role.kubernetes.io/master: "true"
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: kube-vip
        image: ghcr.io/kube-vip/kube-vip:v0.8.7
        args:
          - manager
        env:
        - name: vip_interface
          value: "kubevip0"
        - name: vip_arp
          value: "true"
        - name: address
          value: "192.168.72.99"
        - name: lb_enable
          value: "true"
        - name: cp_enable
          value: "true"
        - name: lb_fwdmethod
          value: "local"
        - name: bgp_enable
          value: "false"
        - name: vip_leaderelection
          value: "true"
        securityContext:
          capabilities:
            add: ["NET_ADMIN","NET_RAW","SYS_TIME"]
